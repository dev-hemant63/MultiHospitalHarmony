@using MultiHospitalHarmony.Models.Common
@model AppResponse<List<Module>>
<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="col-sm-3">
                    <h4 class="card-title">Module Management</h4>
                </div>
                <div class="col-sm-9" style="display: flex; justify-content: end;">
                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModalCenter" onclick="getById('0')"><i class="fa fa-plus text-white" style="font-size: 13px; cursor: pointer;"></i> Add New</button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm" id="datagrid">
                            <thead class="text-white bg-primary">
                                <tr>
                                    <td>#</td>
                                    <td>Action</td>
                                    <td>Name</td>
                                    <td>Display Name</td>
                                    <td>IsActive</td>
                                    <td>EntryAt</td>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int counter = 0;
                                    if (Model.Success)
                                    {
                                        if (Model.Data.Any())
                                        {
                                            foreach (var item in Model.Data)
                                            {
                                                counter++;
                                                                <tr>
                                                                    <td>@counter</td>
                                                                    <td>
                                                                        <div class="btn-group mb-1">
                                                                            <button class="btn btn-outline-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                                            </button>
                                                                            <div class="dropdown-menu">
                                                                                <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#exampleModalCenter" onclick="getById('@item.Id')" href="javascript:void(0)" onclick="edit('@item.Id')">Edit</a>
                                                                            <a class="dropdown-item" onclick="assignModule('@item.Id')" href="javascript:void(0)" onclick="edit('@item.Id')">Assign Page</a>
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>@item.Name</td>
                                                                    <td>@item.DisplayName</td>
                                                                    <td>
                                                                        <div class="form-check form-switch">
                                                                            <input class="form-check-input" type="checkbox" role="switch" id="isactive" checked="@item.IsActive">
                                                                            <label class="form-check-label" for="isactive"></label>
                                                                        </div>
                                                                    </td>
                                                                    <td>@item.EntryAt</td>
                                                                </tr>
                                            }
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModalCenter">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Module</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="hdnId" value="0" />
                    <div class="col-sm-12">
                        <label>Name</label>
                        <input type="text" id="txtName" name="txtName" class="form-control" placeholder="Name" required />
                    </div>
                    <div class="col-sm-12">
                        <label>Display Name</label>
                        <input id="txtdisplayname" name="txtdisplayname" class="form-control" placeholder="Display Name" required />
                        <input type="hidden" id="hdnId" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger light" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="save()">Save</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var assignModule = (id) => {
            $.post('/Setting/AssignPage', { id: id }).done((result) => {
                $('body').append(result);
                $('#myModalNew').modal('show');
                $('[data-dismiss="modal"]').unbind().click(function () {
                    $('.modal,.modal-backdrop').remove();
                });
            }).fail((xhr) => {
                console.log(xhr.responseText);
            });
        }
        var save = () => {
            if (!valiadteInputs()) {
                return false;
            }
            let obj = {
                Id: $('#hdnId').val(),
                Name: $('#txtName').val(),
                DisplayName: $('#txtdisplayname').val(),
            }
            $.post('/Setting/SaveModule', obj).done((res) => {
                Swal.fire({
                    title: res.success == true ? "Success" : "Failed",
                    text: res.message,
                    icon: res.success == true ? "success" : "error"
                });
                if (res.success == true) {
                    $('input').val('');
                    $('.btn-close').click();
                }
            }).fail((xhr) => {
                console.log(xhr.responseText);
                Swal.fire({
                    title: "Failed!!",
                    text: "Server Error!",
                    icon: "error"
                });
            });
        }
        var getById = (id) => {
            if (id != 0) {
                $.post('/Setting/GetModuleById', { Id: id }).done((res) => {
                    if (res.success) {
                        $('#hdnId').val(res.data.id);
                        $('#txtName').val(res.data.name);
                        $('#txtdisplayname').val(res.data.displayName);
                    }
                }).fail((xhr) => {
                    console.log(xhr.responseText);
                    Swal.fire({
                        title: "Failed!!",
                        text: "Server Error!",
                        icon: "error"
                    });
                });
            }
        }
    </script>
}