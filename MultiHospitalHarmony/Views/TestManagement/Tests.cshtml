@model TestsVM
<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="col-sm-3">
                    <h4 class="card-title">Test</h4>
                </div>
                <div class="col-sm-9" style="display: flex; justify-content: end;">
                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#exampleModalCenter" onclick="getById('0')"><i class="fa fa-plus text-white" style="font-size: 13px; cursor: pointer;"></i> Add New</button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-sm" id="datagrid">
                            <thead>
                                <tr>
                                    <td>#</td>
                                    <td>Action</td>
                                    <td>Category</td>
                                    <td>Name</td>
                                    <td>Remark</td>
                                    <td>Price</td>
                                    <td>EntryAt</td>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if(Model.LaboratoryTest.Data.Any())
                                    {
                                        int i = 0;
                                        foreach (var item in Model.LaboratoryTest.Data)
                                        {
                                            i++;
                                            <tr>
                                                <td>@i</td>
                                                <td>@item.Category</td>
                                                <td>@item.Name</td>
                                                <td>@item.Remark</td>
                                                <td>@item.Price</td>
                                                <td>@item.EntryAt</td>
                                                <td>
                                                    <button class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#exampleModalCenter" onclick="getById('@item.Id')"><i class="fa fa-edit"></i></button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="12" class="text-center text-red">Data Not Found!</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModalCenter">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Test</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="hdnId" value="0" />
                    <div class="col-sm-12">
                        <label>Category</label>
                        <select class="form-control" id="ddlCategory">
                            <option value="0">:: SELECT ::</option>
                            @{
                                foreach(var item in Model.TestCategory.Data)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-sm-12">
                        <label>Name</label>
                        <input type="text" id="txtName" name="txtName" class="form-control" placeholder="Name" required />
                    </div>
                    <div class="col-sm-12">
                        <label>Remark</label>
                        <input id="txtRemark" name="txtRemark" class="form-control" placeholder="Remark" required />
                    </div>
                    <div class="col-sm-12">
                        <label>Price</label>
                        <input type="number" id="txtPrice" name="txtPrice" class="form-control" placeholder="Price" required />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger light" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="save()">Save</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        var save = () => {
            let obj = {
                Id: $('#hdnId').val(),
                CategoryId: $('#ddlCategory').val(),
                Name: $('#txtName').val(),
                Remark: $('#txtRemark').val(),
                Price: $('#txtPrice').val(),
            }
            if (!validateObject(obj)) {
                return false;
            }
            $.post('/TestManagement/SaveTest', obj).done((res) => {
                Swal.fire({
                    title: res.success == true ? "Success" : "Failed",
                    text: res.message,
                    icon: res.success == true ? "success" : "error"
                });
                if (res.success == true) {
                    $('input').val('');
                    $('.btn-close').click();
                }
            }).fail((xhr) => {
                console.log(xhr);
                Swal.fire({
                    title: "Failed!!",
                    text: "Server Error!",
                    icon: "error"
                });
            });
        }
        var getById = (id) => {
            if (id != 0) {
                $.post('/TestManagement/GetLaboratoryTestById', { Id: id }).done((res) => {
                    if (res.success) {
                        res.data = res.data[0];
                        $('#hdnId').val(res.data.id);
                        $('#txtName').val(res.data.name);
                        $('#ddlCategory').val(res.data.categoryId);
                        $('#txtRemark').val(res.data.remark);
                        $('#txtPrice').val(res.data.price);
                    }
                }).fail((xhr) => {
                    console.log(xhr);
                    Swal.fire({
                        title: "Failed!!",
                        text: "Server Error!",
                        icon: "error"
                    });
                });
            }
        }
    </script>
}